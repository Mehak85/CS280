#include <iostream>
#include <fstream>
#include <queue>
#include <stack>
#include <string>

using namespace std;
bool inLanguage(string & inputString);

int main(int argc, char *argv [])
{
	string sentence;
	bool isInLanguage;
	int Lcount=0;
	
	ifstream file;
	if( argc >= 2 ) {
		file.open(argv[1]);
		if( !file) 
		{
			/* error */ 
			cerr << "File cannot be opened: " << argv[1] << endl;
			exit (1);
        }
				
	}
	else
	{
		cerr << "No file is found" << endl;
		exit (1);
	}
	
	
	     
    while ( !file.eof()) {
        getline(file, sentence);
       	Lcount++;
        //cout<< "in while stmt" << endl;
       	isInLanguage = inLanguage(sentence);
        //cout<< "return from call ti inLanguage" << endl;
       	if (isInLanguage)
       	{
       		cout << "\"" << sentence << "\"" << " is a sentence in the Language." << endl;
		}
		else
		{
			if(sentence.length() != 0)
				cout << "\"" << sentence << "\"" << " is not a sentence in the Language." << endl;
		}
		 	
		//getline(file, sentence); 
	}
}

bool inLanguage(string & inputString)
{
    int len= inputString.size();//string len
    stack<char> st;//stack
    queue<char> que;// Queue

    
    int i;



    if(inputString.empty())//empty string
    {
        cout<< "Empty string is not in the Language."<<endl;
        return false;
    }
    //if the length is odd
    else if(len%2!=0)//odd string
    {
        cout<<"A string with an odd number of characters is not in the Language."<<endl;
        return false;
    }
    else//if even
    {
        for(i=0; i<len; i++)
        {    
            st.push(inputString[i]);
            que.push(inputString[i]);
        }

      
        for(int j=0; j<len;j++)
        {

            
                if(st.top()!=que.front()){
                    
                return false;
                }
                

                st.pop();
                que.pop();    
                
        
        }
        return true;
    }
    
}
